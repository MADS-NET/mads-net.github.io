<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>MADS</title>
<link>https://mads-net.github.io/guides.html</link>
<atom:link href="https://mads-net.github.io/guides.xml" rel="self" type="application/rss+xml"/>
<description>MADS - Multi-Agent Distributed System</description>
<generator>quarto-1.7.30</generator>
<lastBuildDate>Thu, 05 Jun 2025 22:00:00 GMT</lastBuildDate>
<item>
  <title>Monolithic agents</title>
  <dc:creator>Paolo Bosetti</dc:creator>
  <link>https://mads-net.github.io/guides/monolithic_agents.html</link>
  <description><![CDATA[ 




<section id="contents" class="level1">
<h1>Contents</h1>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>To be done.</p>
</div>
</div>


</section>

 ]]></description>
  <category>advanced</category>
  <category>development</category>
  <category>c++</category>
  <guid>https://mads-net.github.io/guides/monolithic_agents.html</guid>
  <pubDate>Thu, 05 Jun 2025 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Services</title>
  <dc:creator>Paolo Bosetti</dc:creator>
  <link>https://mads-net.github.io/guides/services.html</link>
  <description><![CDATA[ 




<section id="contents" class="level1">
<h1>Contents</h1>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>To be done.</p>
</div>
</div>


</section>

 ]]></description>
  <category>intermediate</category>
  <category>OS</category>
  <category>setup</category>
  <guid>https://mads-net.github.io/guides/services.html</guid>
  <pubDate>Thu, 05 Jun 2025 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Plugins</title>
  <dc:creator>Paolo Bosetti</dc:creator>
  <link>https://mads-net.github.io/guides/plugins.html</link>
  <description><![CDATA[ 




<section id="contents" class="level1">
<h1>Contents</h1>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>To be done.</p>
</div>
</div>


</section>

 ]]></description>
  <category>advanced</category>
  <category>plugins</category>
  <category>development</category>
  <category>c++</category>
  <guid>https://mads-net.github.io/guides/plugins.html</guid>
  <pubDate>Thu, 05 Jun 2025 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Time and time synchronization</title>
  <dc:creator>Paolo Bosetti</dc:creator>
  <link>https://mads-net.github.io/guides/timing.html</link>
  <description><![CDATA[ 




<section id="contents" class="level1">
<h1>Contents</h1>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>To be done.</p>
</div>
</div>


</section>

 ]]></description>
  <category>intermediate</category>
  <category>timing</category>
  <category>OS</category>
  <category>setup</category>
  <guid>https://mads-net.github.io/guides/timing.html</guid>
  <pubDate>Thu, 05 Jun 2025 22:00:00 GMT</pubDate>
</item>
<item>
  <title>MongoDB</title>
  <dc:creator>Paolo Bosetti</dc:creator>
  <link>https://mads-net.github.io/guides/mongodb.html</link>
  <description><![CDATA[ 




<section id="contents" class="level1">
<h1>Contents</h1>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>To be done.</p>
</div>
</div>


</section>

 ]]></description>
  <category>intermediate</category>
  <category>javascript</category>
  <category>database</category>
  <category>analysis</category>
  <guid>https://mads-net.github.io/guides/mongodb.html</guid>
  <pubDate>Thu, 05 Jun 2025 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Network structure</title>
  <dc:creator>Paolo Bosetti</dc:creator>
  <link>https://mads-net.github.io/guides/structure.html</link>
  <description><![CDATA[ 




<section id="architecture" class="level1">
<h1>Architecture</h1>
<p>The typical architecture of a MADS network can be represented as:</p>
<div class="cell" data-fig-width="6" data-fig-height="3" data-layout-align="default">
<div class="cell-output-display">
<div id="fig-net" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-net-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div>
<svg width="576" height="288" viewbox="0.00 0.00 529.55 229.60" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" style="; max-width: none; max-height: none">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 225.6)">
<title>MADS Network</title>
<polygon fill="transparent" stroke="transparent" points="-4,4 -4,-225.6 525.55,-225.6 525.55,4 -4,4"></polygon>
<!-- p1 -->
<g id="node1" class="node">
<title>p1</title>
<polygon fill="#ffffff" stroke="black" points="51.1,-212.8 -0.03,-212.8 -0.03,-188.8 51.1,-188.8 63.1,-200.8 51.1,-212.8"></polygon>
<text text-anchor="middle" x="31.53" y="-196.6" font-family="Times,serif" font-size="14.00">Plugin 1</text>
</g>
<!-- a1 -->
<g id="node2" class="node">
<title>a1</title>
<polygon fill="#ffffff" stroke="black" points="176.05,-221.4 114.33,-221.4 114.33,-180.2 176.05,-180.2 176.05,-221.4"></polygon>
<text text-anchor="middle" x="145.19" y="-205" font-family="Times,serif" font-size="14.00">Agent 1</text>
<text text-anchor="middle" x="145.19" y="-188.2" font-family="Times,serif" font-size="14.00">(source)</text>
</g>
<!-- p1&#45;&gt;a1 -->
<g id="edge1" class="edge">
<title>p1-&gt;a1</title>
<path fill="none" stroke="black" d="M63.34,-200.8C79.22,-200.8 98.5,-200.8 114.25,-200.8"></path>
</g>
<!-- broker -->
<g id="node9" class="node">
<title>broker</title>
<polygon fill="#ffffff" stroke="black" points="281.31,-119.8 227.31,-119.8 227.31,-83.8 281.31,-83.8 281.31,-119.8"></polygon>
<text text-anchor="middle" x="254.31" y="-97.6" font-family="Times,serif" font-size="14.00">broker</text>
</g>
<!-- a1&#45;&gt;broker -->
<g id="edge4" class="edge">
<title>a1-&gt;broker</title>
<path fill="none" stroke="black" d="M176.32,-181.71C181.14,-178.26 185.97,-174.56 190.31,-170.8 205.34,-157.78 220.41,-141.41 232.05,-127.89"></path>
<polygon fill="black" stroke="black" points="235.03,-129.78 238.82,-119.89 229.69,-125.26 235.03,-129.78"></polygon>
</g>
<!-- p2 -->
<g id="node3" class="node">
<title>p2</title>
<polygon fill="#ffffff" stroke="black" points="51.1,-152.8 -0.03,-152.8 -0.03,-128.8 51.1,-128.8 63.1,-140.8 51.1,-152.8"></polygon>
<text text-anchor="middle" x="31.53" y="-136.6" font-family="Times,serif" font-size="14.00">Plugin 2</text>
</g>
<!-- a2 -->
<g id="node4" class="node">
<title>a2</title>
<polygon fill="#ffffff" stroke="black" points="175.4,-161.4 114.97,-161.4 114.97,-120.2 175.4,-120.2 175.4,-161.4"></polygon>
<text text-anchor="middle" x="145.19" y="-145" font-family="Times,serif" font-size="14.00">Agent 2</text>
<text text-anchor="middle" x="145.19" y="-128.2" font-family="Times,serif" font-size="14.00">(filter)</text>
</g>
<!-- p2&#45;&gt;a2 -->
<g id="edge2" class="edge">
<title>p2-&gt;a2</title>
<path fill="none" stroke="black" d="M63.34,-140.8C79.35,-140.8 98.82,-140.8 114.64,-140.8"></path>
</g>
<!-- a2&#45;&gt;broker -->
<g id="edge5" class="edge">
<title>a2-&gt;broker</title>
<path fill="none" stroke="black" d="M184.86,-126.72C195.46,-122.86 206.91,-118.69 217.36,-114.89"></path>
<polygon fill="black" stroke="black" points="183.66,-123.43 175.46,-130.14 186.05,-130.01 183.66,-123.43"></polygon>
<polygon fill="black" stroke="black" points="218.8,-118.09 227,-111.38 216.41,-111.51 218.8,-118.09"></polygon>
</g>
<!-- p3 -->
<g id="node5" class="node">
<title>p3</title>
<polygon fill="#ffffff" stroke="black" points="51.1,-92.8 -0.03,-92.8 -0.03,-68.8 51.1,-68.8 63.1,-80.8 51.1,-92.8"></polygon>
<text text-anchor="middle" x="31.53" y="-76.6" font-family="Times,serif" font-size="14.00">Plugin 3</text>
</g>
<!-- a3 -->
<g id="node6" class="node">
<title>a3</title>
<polygon fill="#ffffff" stroke="black" points="175.4,-101.4 114.97,-101.4 114.97,-60.2 175.4,-60.2 175.4,-101.4"></polygon>
<text text-anchor="middle" x="145.19" y="-85" font-family="Times,serif" font-size="14.00">Agent 3</text>
<text text-anchor="middle" x="145.19" y="-68.2" font-family="Times,serif" font-size="14.00">(sink)</text>
</g>
<!-- p3&#45;&gt;a3 -->
<g id="edge3" class="edge">
<title>p3-&gt;a3</title>
<path fill="none" stroke="black" d="M63.34,-80.8C79.35,-80.8 98.82,-80.8 114.64,-80.8"></path>
</g>
<!-- a3&#45;&gt;broker -->
<g id="edge6" class="edge">
<title>a3-&gt;broker</title>
<path fill="none" stroke="black" d="M185.67,-88.54C199.45,-91.24 214.56,-94.2 227,-96.64"></path>
<polygon fill="black" stroke="black" points="185.95,-85.03 175.46,-86.54 184.6,-91.9 185.95,-85.03"></polygon>
</g>
<!-- a4 -->
<g id="node7" class="node">
<title>a4</title>
<polygon fill="#ffffff" stroke="black" points="190.43,-41.4 99.94,-41.4 99.94,-0.2 190.43,-0.2 190.43,-41.4"></polygon>
<text text-anchor="middle" x="145.19" y="-25" font-family="Times,serif" font-size="14.00">Monolithic</text>
<text text-anchor="middle" x="145.19" y="-8.2" font-family="Times,serif" font-size="14.00">Agent (filter)</text>
</g>
<!-- a4&#45;&gt;broker -->
<g id="edge7" class="edge">
<title>a4-&gt;broker</title>
<path fill="none" stroke="black" d="M185.52,-47.3C187.15,-48.47 188.75,-49.64 190.31,-50.8 201.45,-59.08 213.36,-68.55 223.79,-77.06"></path>
<polygon fill="black" stroke="black" points="187.46,-44.38 177.28,-41.46 183.41,-50.09 187.46,-44.38"></polygon>
<polygon fill="black" stroke="black" points="221.85,-79.99 231.8,-83.64 226.3,-74.59 221.85,-79.99"></polygon>
</g>
<!-- mongo -->
<g id="node8" class="node">
<title>mongo</title>
<path fill="#ffffff" stroke="black" d="M521.5,-116.53C521.5,-118.33 504.51,-119.8 483.6,-119.8 462.69,-119.8 445.71,-118.33 445.71,-116.53 445.71,-116.53 445.71,-87.07 445.71,-87.07 445.71,-85.27 462.69,-83.8 483.6,-83.8 504.51,-83.8 521.5,-85.27 521.5,-87.07 521.5,-87.07 521.5,-116.53 521.5,-116.53"></path>
<path fill="none" stroke="black" d="M521.5,-116.53C521.5,-114.72 504.51,-113.25 483.6,-113.25 462.69,-113.25 445.71,-114.72 445.71,-116.53"></path>
<text text-anchor="middle" x="483.6" y="-97.6" font-family="Times,serif" font-size="14.00">MongoDB</text>
</g>
<!-- logger -->
<g id="node10" class="node">
<title>logger</title>
<polygon fill="#ffffff" stroke="black" points="372.31,-119.8 318.31,-119.8 318.31,-83.8 372.31,-83.8 372.31,-119.8"></polygon>
<text text-anchor="middle" x="345.31" y="-97.6" font-family="Times,serif" font-size="14.00">logger</text>
</g>
<!-- broker&#45;&gt;logger -->
<g id="edge8" class="edge">
<title>broker-&gt;logger</title>
<path fill="none" stroke="black" d="M281.53,-101.8C289.86,-101.8 299.22,-101.8 308.13,-101.8"></path>
<polygon fill="black" stroke="black" points="308.28,-105.3 318.28,-101.8 308.28,-98.3 308.28,-105.3"></polygon>
</g>
<!-- logger&#45;&gt;mongo -->
<g id="edge9" class="edge">
<title>logger-&gt;mongo</title>
<path fill="none" stroke="black" stroke-dasharray="5,2" d="M372.59,-101.8C390.4,-101.8 414.45,-101.8 435.52,-101.8"></path>
<polygon fill="black" stroke="black" points="435.59,-105.3 445.59,-101.8 435.59,-98.3 435.59,-105.3"></polygon>
<text text-anchor="middle" x="408.98" y="-106" font-family="Times,serif" font-size="14.00">BSON</text>
</g>
</g>
</svg>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-net-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: MADS Network
</figcaption>
</figure>
</div>
</div>
</div>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>Remember that the above schematic represent <em>processes</em>, regardless the physical machine on which they are being executed.</p>
<p>For example, the whole network could run on a single workstation, or it could be conversely distributed over multiple devices connected to the same IP network, each device running a single process/node.</p>
</div>
</div>
<p>In the figure Figure&nbsp;1, the solid lines represent a <a href="https://zeromq.org">ZeroMQ</a> connection over TCP/IP, which uses compressed JSON as a data encoding protocol. Compression is preformed with the <a href="https://github.com/google/snappy">snappy</a> library. The dashed line, conversely, represents the proprietary MongoDB protocol, with data serialized as BSON (Binary-JSON).</p>
<section id="the-broker" class="level2">
<h2 class="anchored" data-anchor-id="the-broker">The broker</h2>
<p>What is the broker purpose?</p>
<p>The broker solves the issue of knowing multiple network addresses when you have a number of devices participating to the same distributed system.</p>
<p>With the aid of the broker, any separate device partaking to the MADS network only needs to know a single hostname/IP address: that of the machine running the broker.</p>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>There can only be a single broker per network.</p>
</div>
</div>
<p>Running the broker is quite simple:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mads</span> broker</span></code></pre></div>
</section>
<section id="the-agents" class="level2">
<h2 class="anchored" data-anchor-id="the-agents">The agents</h2>
<p>Agents can be:</p>
<ul>
<li><strong>monolithic</strong>: implemented as a single executable inheriting the <code>Mads::Agent</code> C++ class.</li>
<li><strong>plug-in</strong>: a single executable that on runtime loads a proper plug-in (i.e.&nbsp;a dynamically loaded library)</li>
</ul>
<p>Regardless the type, agent can have three different behaviors:</p>
<ul>
<li><strong>source</strong>: they provide information to the network (e.g.&nbsp;by reading sensors)</li>
<li><strong>filter</strong>: they operate and transform received information</li>
<li><strong>sink</strong>: they consume information received from the network (e.g.&nbsp;to store or visualize)</li>
</ul>
<p>The MADS installer provides three general purpose agents, aptly named <code>source</code>, <code>filter</code>, and <code>sink</code>, that are designe do load proper plugins. The command <code>mads plugin</code> can be used to generate a suitable template for a new plugin to be developed.</p>
</section>
</section>
<section id="layout-and-requirements" class="level1">
<h1>Layout and requirements</h1>
<p>At the bare minimum, a MADS network requires:</p>
<ul>
<li>the broker</li>
<li>the MongoDB database</li>
<li>the logger agent</li>
</ul>
<p>The MADS installers provide broker and logger, but MongoDB must be installed separatedly. The easiest route is to it via Docker.</p>
<p>Ideally, broker, logger and database should run on a single machine, having enough resources to store the data flow on the database, while agents can be distributed over multiple device.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>According to our testing, Linux is the best choice for running MADS broker and logger in terms of performance.</p>
</div>
</div>
<p>Any other agent can be run on the same machine or on a separate machine. In the latter case, it must be started with the <code>-s</code> option stating the broker address, e.g.: <code>-s tcp://&lt;hostname&gt;:9092</code>, where <code>&lt;hostname&gt;</code> shall be replaced with the proper host name, if available, or with the machine IP address. This is the only address that any agent needs to know in order to connect to the MADS network.</p>
<p>To help you find out the proper address, you can use the <code>-n list</code> broker option:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> mads <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">broker</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> list</span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Reading</span> settings from /Users/p4010/usr/local/etc/mads.ini <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">broker</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb2-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Using</span> network interface list</span>
<span id="cb2-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Available</span> network adapters:</span>
<span id="cb2-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span>       lo0] - 127.0.0.1</span>
<span id="cb2-6"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span>       <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">en0</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">]</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> 192.168.1.220</span>
<span id="cb2-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> bridge100] - 198.19.249.3</span>
<span id="cb2-8"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">Binding</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">broker</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">frontend</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">XSUB</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">at</span> tcp://<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>:9090</span>
<span id="cb2-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Binding</span> broker backend <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">XPUB</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">at</span> tcp://<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>:9091</span>
<span id="cb2-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Binding</span> broker shared settings <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">REP</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">at</span> tcp://<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>:9092</span>
<span id="cb2-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Timecode</span> FPS: 25</span>
<span id="cb2-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Settings</span> are provided via tcp://127.0.0.1:9092</span>
<span id="cb2-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">CTRL-C</span> to immediate exit</span>
<span id="cb2-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Type</span> P to pause, R to resume, I for information, Q to clean quit, X to restart and reload settings</span></code></pre></div>
<p>This shows that the host has three network interfaces. The public one is probably <code>en0</code> (your names may vary). Now quit the broker and relaunch it as:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> mads <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">broker</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> en0</span>
<span id="cb3-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Reading</span> settings from /Users/p4010/usr/local/etc/mads.ini <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">broker</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb3-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Using</span> network interface en0</span>
<span id="cb3-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Binding</span> broker frontend <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">XSUB</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">at</span> tcp://<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>:9090</span>
<span id="cb3-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Binding</span> broker backend <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">XPUB</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">at</span> tcp://<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>:9091</span>
<span id="cb3-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Binding</span> broker shared settings <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">REP</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">at</span> tcp://<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>:9092</span>
<span id="cb3-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Timecode</span> FPS: 25</span>
<span id="cb3-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Settings</span> are provided via tcp://192.168.1.220:9092</span>
<span id="cb3-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">CTRL-C</span> to immediate exit</span>
<span id="cb3-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Type</span> P to pause, R to resume, I for information, Q to clean quit, X to restart and reload settings</span></code></pre></div>
<p>Look at the line <code>Settings are provided via tcp://192.168.1.220:9092</code>: that is the address that you must use to start any agent in the network, e.g.:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mads</span> feedback <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> tcp://192.168.1.220:9092</span></code></pre></div>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>The <code>-n</code> command line option <strong>has no effect</strong> on how the broker operates. Its only purpose is to help you find out the proper address to use when starting agents that run on different machines or devices.</p>
</div>
</div>
</section>
<section id="where-to-go-next" class="level1">
<h1>Where to go next</h1>
<p>Once you have the bare minimum running, the next step is to configure and customize your distributed steps. In detail, you will have to:</p>
<ol type="1">
<li>learn how to develop your custom agents. This can be done in three ways:
<ul>
<li>by developing your own monolithic agent, using the MADS C++17 library (<a href="../guides/monolithic_agents.html">hardest</a>, high performance and maximum flexibility)</li>
<li>by implementing a C++17 plugin (<a href="../guides/plugins.html">hard</a>, high performance, some compromise in flexibility)</li>
<li>by using the Python wrapper agent and implementing the details in Python (<a href="../guides/python_agent.html">easy</a>, limited performance and flexibility)</li>
</ul></li>
<li><a href="../guides/services.html">learn</a> how to make your agents into <strong>services</strong> (only on linux)</li>
<li><a href="../guides/timing.html">learn</a> how to synchronize time on multiple devices</li>
<li><a href="../guides/mongodb.html">learn</a> how to analyze the data collected by the MongoDB database</li>
</ol>


</section>

 ]]></description>
  <category>template</category>
  <category>basics</category>
  <guid>https://mads-net.github.io/guides/structure.html</guid>
  <pubDate>Tue, 03 Jun 2025 22:00:00 GMT</pubDate>
</item>
<item>
  <title>How to contribute</title>
  <dc:creator>Paolo Bosetti</dc:creator>
  <link>https://mads-net.github.io/guides/contribute.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>These guides are prepared in <a href="https://quarto.org/" target="_blank">Quarto</a> format, which is a markdown-based format that allows for the creation of documents and websites with rich formatting and interactivity. The website structure is hosted on <a href="https://github.com/mads-net/mads-net.github.io" target="_blank">GitHub</a>, and contributions can be made through pull requests.</p>
</section>
<section id="set-up" class="level1">
<h1>Set-up</h1>
<section id="prerequisites" class="level2">
<h2 class="anchored" data-anchor-id="prerequisites">Prerequisites</h2>
<ul>
<li>Git and a GitHub account</li>
<li>An IDE:
<ul>
<li><a href="https://posit.co/download/rstudio-desktop/" target="_blank">RStudio</a> (recommended)</li>
<li><a href="https://code.visualstudio.com/" target="_blank">Visual Studio Code</a></li>
</ul></li>
<li>If you opt for VS Code, you will need to install <a href="https://quarto.org" target="_blank">Quarto</a> and the <a href="https://marketplace.visualstudio.com/items?itemName=quarto.quarto" target="_blank">Quarto extension</a>. RStudio comes with Quarto pre-packaged.</li>
</ul>
</section>
<section id="forking-the-repository" class="level2">
<h2 class="anchored" data-anchor-id="forking-the-repository">Forking the repository</h2>
<p>To contribute to the MADS guides collection, you need to fork the repository. This allows you to create your own copy of the repository where you can make changes without affecting the original project. To fork the repository, follow these steps:</p>
<ol type="1">
<li>go to <a href="https://github.com/MADS-Net/mads-net.github.io" class="uri">https://github.com/MADS-Net/mads-net.github.io</a></li>
<li>click on the “Fork” button in the top right corner of the page</li>
<li>select your GitHub account as the destination for the fork</li>
<li>wait for GitHub to create the forked repository in your account</li>
</ol>
</section>
<section id="authorizing-your-computer" class="level2">
<h2 class="anchored" data-anchor-id="authorizing-your-computer">Authorizing your computer</h2>
<p>The best way to authorize your computer to work on GitHub repositories is to use the <code>gh</code> command line utility. You can get it from <a href="https://cli.github.com" target="_blank">https://cli.github.com</a>. Once installed, open a terminal and type:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> auth login</span></code></pre></div>
<p>then follow instructions to authenticate your GitHub account. This will allow you to push changes to your forked repository and create pull requests. It is typically done once per computer.</p>
</section>
<section id="cloning-the-repository" class="level2">
<h2 class="anchored" data-anchor-id="cloning-the-repository">Cloning the repository</h2>
<p>You cannot edit the official repository, but you can freely edit your forked repository. To do this, you need to clone the repository to your local machine. This creates a local copy of the repository that you can work on. To clone the repository, follow these steps:</p>
<ol type="1">
<li>open your terminal or command prompt</li>
<li>navigate to the directory where you want to clone the repository</li>
<li>type the following:</li>
</ol>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> repo clone <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>your-username<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>/mads-net.github.io.git</span></code></pre></div>
<p>replacing <code>&lt;your-username&gt;</code> with your GitHub username. This will create a folder named <code>mads-net.github.io</code> in your current directory, containing the cloned repository. Then open the <code>mads_doc.Rproj</code> file if you are using RStudio. If you are using VSCode, just open that folder.</p>
</section>
</section>
<section id="creating-a-new-guide" class="level1">
<h1>Creating a new guide</h1>
<p>The <a href="../guides.html">Guides</a> page automatically presents the guides available in the <code>guides</code> folder of the repository. To create a new guide, follow these steps.</p>
<section id="ensure-your-repository-is-up-to-date" class="level2">
<h2 class="anchored" data-anchor-id="ensure-your-repository-is-up-to-date">Ensure your repository is up to date</h2>
<p>Other people could contribute to the guides while you are working on your own. To ensure that your repository is up to date and to minimize the risks for conflicts, you shall pull the latest changes from the original repository. To do this, follow these steps:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Navigate to the cloned repository folder</span></span>
<span id="cb3-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> mads-net.github.io</span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fetch any new changes from the original repository</span></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> fetch upstream</span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># merge the changes into your local repository</span></span>
<span id="cb3-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> merge upstream/main</span></code></pre></div>
</section>
<section id="create-a-new-guide" class="level2">
<h2 class="anchored" data-anchor-id="create-a-new-guide">Create a new guide</h2>
<p>To create a new guide, you can use the <code>guides/template.qmd</code> file as a starting point. This file contains the basic structure and formatting for a guide. Make a copy of it with a suitable name.</p>
<p>If the guide you are working is complex and is probably going to require images and/or data files, you should put the guide in a separate folder. For example, if you are writing a guide on “Data Analysis”, you could create a folder named <code>guides/data-analysis</code> and put the <code>data-analysis.qmd</code> file inside it. Quarto will automatically add that file as a new guide in the <a href="../guides.html">Guides</a> page listing. Images and supporting files can then be put in the same folder, and they will be automatically linked in the guide.</p>
</section>
<section id="edit-the-guide" class="level2">
<h2 class="anchored" data-anchor-id="edit-the-guide">Edit the guide</h2>
<p>The guide YAML preamble is the first thing to edit. Ensure that you set the <code>title</code>, <code>author</code>, and <code>date</code> fields correctly. You can also set the <code>categories</code> field to categorize your guide, and the <code>abstract</code> field to provide a brief description of the guide.</p>
<p>Note that the preamble has a <code>draft: true</code> field. This means that the guide will not be published until you set it to <code>draft: false</code>. This is useful to work on the guide without it being visible on the website or when previewing the website locally. A guide in draft mode will not be listed in the <a href="../guides.html">Guides</a> page, but it will be accessible via its URL.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>If you want that the guide is also available in PDF format, uncomment the preamble section for the <code>format</code> key. In this way, the guide will be available in both HTML and PDF formats.</p>
</div>
</div>
<p>Refer to the <a href="https://quarto.org/docs/guide/" target="_blank">Quarto documentation</a> for more information on how to format the guide using Quarto markdown.</p>
</section>
<section id="preview-the-guide" class="level2">
<h2 class="anchored" data-anchor-id="preview-the-guide">Preview the guide</h2>
<p>To preview the guide, you can use the <code>quarto preview</code> command. This will start a local web server and open the guide in your default web browser. To do this, follow these steps:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Navigate to the cloned repository folder</span></span>
<span id="cb4-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> mads-net.github.io</span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Start the local web server</span></span>
<span id="cb4-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> preview</span></code></pre></div>
<div class="callout callout-style-default callout-note callout-titled" title="Automatic refresh">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Automatic refresh
</div>
</div>
<div class="callout-body-container callout-body">
<p>The local web server will automatically refresh the page whenever you save changes to the guide files. This allows you to see the changes in real-time without having to manually refresh the page.</p>
<p>However, some changes (e.g.&nbsp;adding new files) are not always detected. In these cases, you can manually refresh the page in your browser to see the changes, and if it does not work, you can stop the server with <code>Ctrl+C</code> and restart it with <code>quarto preview</code>.</p>
</div>
</div>
</section>
<section id="publish-your-contribute" class="level2">
<h2 class="anchored" data-anchor-id="publish-your-contribute">Publish your contribute</h2>
<p>Whenever you are content with your contributed guide, you can commit your work and push it to your forked repository. <strong>before doing that, however</strong>, ensure that there are no new contribution on the <code>uspstream</code> repository. Since you cannot pull changes on your repository if it has pending changes, you first <strong>stash</strong> your changes, i.e.&nbsp;you put them temporarily aside, reverting back to a clean state (the last commit, in synchron with <code>upstream</code>):</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> stash</span></code></pre></div>
<p>Now you can pull the latest changes from the original repository:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fetch any new changes from the original repository</span></span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> fetch upstream</span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Merge the changes into your local repository</span></span>
<span id="cb6-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> merge upstream/main</span></code></pre></div>
<p>After this, you can reapply your changes:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> stash pop</span></code></pre></div>
<p>If there were new changes from <code>upstream</code>, and you have changed the same files, you might have to resolve conflicts. In this case, Git will show you the files with conflicts, and you will need to manually edit them to resolve the conflicts.</p>
<p>A conflict is typically marked in the file with <code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</code>, <code>=======</code>, and <code>&gt;&gt;&gt;&gt;&gt;&gt;&gt; upstream/main</code>. You need to choose which changes to keep, or merge them together, and then remove these markers. Once you are done, you can add the resolved files to the staging area, make a new commit and publish your changes on gitHub:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add .</span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Resolved conflicts and updated guide"</span></span>
<span id="cb8-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push origin main</span></code></pre></div>
<p>Now <strong>your</strong> forked repository will be ahead of the original, <code>upstream</code>, repository. This means that you have changes that are not yet in the original repository. So you can now create a <em>pull request</em> to the original repository. This will allow the maintainers of the MADS guides collection to review your changes and merge them into the main repository. To create a pull request, follow these steps:</p>
<ol type="1">
<li>go to your forked repository on GitHub</li>
<li>click on the “Pull requests” tab</li>
<li>click on the “New pull request” button</li>
<li>select the branch you want to merge into the original repository (usually <code>main</code>)</li>
<li>review the changes and add a title and description for the pull request (be informative!!!)</li>
<li>click on the “Create pull request” button</li>
<li>wait for the maintainers to review your changes and merge them into the original repository</li>
</ol>


</section>
</section>

 ]]></description>
  <category>how-to</category>
  <category>easy</category>
  <guid>https://mads-net.github.io/guides/contribute.html</guid>
  <pubDate>Sun, 01 Jun 2025 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Containerized MADS</title>
  <dc:creator>Paolo Bosetti</dc:creator>
  <link>https://mads-net.github.io/guides/containerized.html</link>
  <description><![CDATA[ 




<section id="contents" class="level1">
<h1>Contents</h1>
<p>Setting up a MADS network requires a minimum of a broker, a MongoDB server, and the logger agent. This guide explains the easiest and more portable solution to have them up and running in minuts in a Docker environment.</p>
</section>
<section id="prerequisites" class="level1">
<h1>Prerequisites</h1>
<p>You need to have Docker installed on your machine. If you don’t have it yet, you can follow the <a href="https://docs.docker.com/get-docker/">official installation guide</a>. Follow that guide thoroughly, and make sure you can run this command in your terminal:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> run hello-world</span></code></pre></div>
</section>
<section id="running-the-mads-network" class="level1">
<h1>Running the MADS network</h1>
<p>The MADS Network is actually available as a <strong>compose</strong> network of three containers: the broker, the MongoDB server, and the logger agent. Docker has a <code>docker compose</code> command that allows to build and deploy multiple, synchronized containers properly sharing network communications.</p>
<p>To find more on <code>docker compose</code>, have a look at the <a href="https://docs.docker.com/compose/">documentation</a>.</p>
<section id="step-1.-clone-the-repo" class="level2">
<h2 class="anchored" data-anchor-id="step-1.-clone-the-repo">Step 1. Clone the repo</h2>
<p>All you need is in the <a href="https://github.com/MADS-NET/MADS_container">MADS_container</a> repository. You can clone it with the following command:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--depth</span> 1 https://github.com/MADS-NET/MADS_container.git</span></code></pre></div>
</section>
<section id="step-2.-build-contaners" class="level2">
<h2 class="anchored" data-anchor-id="step-2.-build-contaners">Step 2. Build contaners</h2>
<p>In the <code>MADS_container</code> directory, you can build the containers with the following command:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> compose build</span></code></pre></div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>This is only to be done once.</p>
</div>
</div>
</section>
<section id="step-3.-run-the-containers" class="level2">
<h2 class="anchored" data-anchor-id="step-3.-run-the-containers">Step 3. Run the containers</h2>
<p>You can now run the containers with the following command:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> compose up <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span></span></code></pre></div>
<p>This starts the three containerized processes: MogoDB, the broker, and the logger agent.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>You can stop the containers at any time with the command <code>docker compose down</code>.</p>
</div>
</div>
<p>Now the broker and the database are also accessible as if they were processes running on your host machine.</p>


</section>
</section>

 ]]></description>
  <category>docker</category>
  <category>easy</category>
  <category>OS</category>
  <category>setup</category>
  <guid>https://mads-net.github.io/guides/containerized.html</guid>
  <pubDate>Sun, 01 Jun 2025 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Python Agent</title>
  <dc:creator>Paolo Bosetti</dc:creator>
  <link>https://mads-net.github.io/guides/python_agent.html</link>
  <description><![CDATA[ 




<section id="contents" class="level1">
<h1>Contents</h1>
<p>The Python3 MADS agent is available on <a href="https://github.com/MADS-net/python_agent" class="uri">https://github.com/MADS-net/python_agent</a>.</p>
<section id="installing" class="level2">
<h2 class="anchored" data-anchor-id="installing">Installing</h2>
<p>You need to have <code>python3</code> and <code>python3-dev</code> installed. Then proceed as follows depending on your platform.</p>
<section id="unix" class="level3">
<h3 class="anchored" data-anchor-id="unix">UNIX</h3>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python3</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> venv .venv</span>
<span id="cb1-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> .venv/bin/activate</span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install numpy</span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># also install other necessary Python libs</span></span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmake</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-Bbuild</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-DCMAKE_INSTALL_PREFIX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mads</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmake</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--build</span> build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-j6</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> cmake <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--install</span> build</span></code></pre></div>
<p>The above is tested on MacOS and Ubuntu 22.04.</p>
</section>
<section id="windows" class="level3">
<h3 class="anchored" data-anchor-id="windows">Windows</h3>
<p>Run the following from project root:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb2-1">python <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>m venv <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">venv</span></span>
<span id="cb2-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">venv</span>\Scripts\activate</span>
<span id="cb2-3">pip install numpy</span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># also install other necessary Python libs</span></span></code></pre></div>
<p>Then:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb3-1">cmake <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Bbuild <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>DCMAKE_INSTALL_PREFIX<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$(</span>mads <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb3-2">cmake <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>build build <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>config Release</span>
<span id="cb3-3">sudo cmake <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>install build</span></code></pre></div>
<div class="callout callout-style-default callout-warning callout-titled" title="Enable sudo on Windows">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Enable sudo on Windows
</div>
</div>
<div class="callout-body-container callout-body">
<p>For <code>sudo</code> to work on Windows, you need to enable it on <em>Settings &gt; System &gt; For Developers</em> and set <em>Enable sudo</em> to On.</p>
</div>
</div>
</section>
</section>
<section id="executing" class="level2">
<h2 class="anchored" data-anchor-id="executing">Executing</h2>
<p>The new agent is installed as <code>mads-python</code>, so you can just type <code>mads python -h</code> (or <code>mads-python -h</code> on Windows) to know more:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> mads <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-h</span></span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> ver. 1.2.6</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Usage:</span></span>
<span id="cb4-5">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">OPTION...</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb4-6"></span>
<span id="cb4-7">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-p,</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--period</span> arg         Sampling period <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">default</span> 100 ms<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb4-8">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-m,</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--module</span> arg         Python module to load</span>
<span id="cb4-9">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-n,</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> arg           Agent name <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">default</span> to <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'python'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb4-10">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-i,</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--agent-id</span> arg       Agent ID to be added to JSON frames</span>
<span id="cb4-11">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-s,</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--settings</span> arg       Settings file path/URI</span>
<span id="cb4-12">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-S,</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--save-settings</span> arg  Save settings to ini file</span>
<span id="cb4-13">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-v,</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span>            Print version</span>
<span id="cb4-14">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-h,</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--help</span>               Print usage</span></code></pre></div>
<p>Typically, to launch an agent named <code>python_source</code>, which gets its settings from a <code>python_source</code> section in <code>mads.ini</code>, and uses the Python module named <code>source</code> defined in the <code>source.py</code> file and that runs every 100 ms, the command is:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mads</span> python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> python_source <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> source <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p100</span></span></code></pre></div>
<p>where:</p>
<ul>
<li><code>-n python_source</code> sets the agent name to <code>python_source</code>, and gets its settings from the same section in the <code>mads.ini</code> file</li>
<li><code>-m source</code> sets the Python module to <code>source.py</code>, which is searched for in the Python modules search paths, see below</li>
<li><code>-p100</code> sets the sampling period to 100 ms</li>
</ul>
</section>
<section id="python-modules-search-paths" class="level2">
<h2 class="anchored" data-anchor-id="python-modules-search-paths">Python modules search paths</h2>
<p>The Python modules are searched for in the following folders:</p>
<ul>
<li><code>./python</code></li>
<li><code>./scripts</code></li>
<li><code>../python</code></li>
<li><code>../scripts</code></li>
<li><code>../../python</code></li>
<li><code>../../scripts</code></li>
<li><code>INSTALL_PREFIX + /python</code></li>
<li><code>INSTALL_PREFIX + /scripts</code></li>
</ul>
<p>plus any path listed in the <code>mads.ini</code> file under the <code>search_path</code> key (an array or a single string).</p>
</section>
<section id="the-mads.ini-section" class="level2">
<h2 class="anchored" data-anchor-id="the-mads.ini-section">The <code>mads.ini</code> section</h2>
<p>The following fields are typically used:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[python_source]</span></span>
<span id="cb6-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">period </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span></span>
<span id="cb6-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">venv </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> "/path/to/.venv"</span></span>
<span id="cb6-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">python_module </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> "my_source"</span></span>
<span id="cb6-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">search_paths </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> ["/path/to/python/folder"</span></span></code></pre></div>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>The section name must match the <code>-m</code> option argument when you launch the agent, so in the case aboxe you must use <code>-m python_source</code>.</p>
</div>
</div>
</section>
<section id="module-types" class="level2">
<h2 class="anchored" data-anchor-id="module-types">Module Types</h2>
<p>Python modules can be of type <code>source</code>, <code>filter</code>, or <code>sink</code>. The module type is defined by setting a top level variable like this, typically at the beginning of the script, just after the various <code>import</code>s:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">agent_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sink"</span></span></code></pre></div>
<p>All the modules <strong>must</strong> implement a <code>setup()</code> function, which is expected to use the dictionary available in the module variable <code>params</code> (a dictionary)&nbsp;to do initial setup (opening ports or files, etc.)</p>
<p><strong>Source</strong> modules <strong>must</strong> implement a <code>get_output()</code> function, that produces the JSON string that will be published.</p>
<p><strong>Filter</strong> modules <strong>must</strong> implement a <code>process()</code> function, that is supposed to operate on the last received data dictionary (available as <code>data</code>, a module variable) and produce a JSON string that will be published.</p>
<p><strong>Sink</strong> modules <strong>must</strong> implement a <code>deal_with_data()</code> function, that operates on the <code>data</code> dictionary, a module variable.</p>
</section>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>To be completed</p>
</div>
</div>
<hr>


</section>

 ]]></description>
  <category>python</category>
  <category>agent</category>
  <category>easy</category>
  <guid>https://mads-net.github.io/guides/python_agent.html</guid>
  <pubDate>Sun, 01 Jun 2025 22:00:00 GMT</pubDate>
</item>
</channel>
</rss>
