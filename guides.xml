<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>MADS</title>
<link>https://mads-net.github.io/guides.html</link>
<atom:link href="https://mads-net.github.io/guides.xml" rel="self" type="application/rss+xml"/>
<description>MADS - Multi-Agent Distributed System</description>
<generator>quarto-1.7.30</generator>
<lastBuildDate>Sun, 01 Jun 2025 22:00:00 GMT</lastBuildDate>
<item>
  <title>Containerized MADS</title>
  <dc:creator>Paolo Bosetti</dc:creator>
  <link>https://mads-net.github.io/guides/containerized.html</link>
  <description><![CDATA[ 




<section id="contents" class="level1">
<h1>Contents</h1>
<p>Setting up a MADS network requires a minimum of a broker, a MongoDB server, and the logger agent. This guide explains the easiest and more portable solution to have them up and running in minuts in a Docker environment.</p>
</section>
<section id="prerequisites" class="level1">
<h1>Prerequisites</h1>
<p>You need to have Docker installed on your machine. If you donâ€™t have it yet, you can follow the <a href="https://docs.docker.com/get-docker/">official installation guide</a>. Follow that guide thoroughly, and make sure you can run this command in your terminal:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> run hello-world</span></code></pre></div>
</section>
<section id="running-the-mads-network" class="level1">
<h1>Running the MADS network</h1>
<p>The MADS Network is actually available as a <strong>compose</strong> network of three containers: the broker, the MongoDB server, and the logger agent. Docker has a <code>docker compose</code> command that allows to build and deploy multiple, synchronized containers properly sharing network communications.</p>
<p>To find more on <code>docker compose</code>, have a look at the <a href="https://docs.docker.com/compose/">documentation</a>.</p>
<section id="step-1.-clone-the-repo" class="level2">
<h2 class="anchored" data-anchor-id="step-1.-clone-the-repo">Step 1. Clone the repo</h2>
<p>All you need is in the <a href="https://github.com/MADS-NET/MADS_container">MADS_container</a> repository. You can clone it with the following command:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--depth</span> 1 https://github.com/MADS-NET/MADS_container.git</span></code></pre></div>
</section>
<section id="step-2.-build-contaners" class="level2">
<h2 class="anchored" data-anchor-id="step-2.-build-contaners">Step 2. Build contaners</h2>
<p>In the <code>MADS_container</code> directory, you can build the containers with the following command:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> compose build</span></code></pre></div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>This is only to be done once.</p>
</div>
</div>
</section>
<section id="step-3.-run-the-containers" class="level2">
<h2 class="anchored" data-anchor-id="step-3.-run-the-containers">Step 3. Run the containers</h2>
<p>You can now run the containers with the following command:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> compose up</span></code></pre></div>
<p>This starts the three containerized processes: MogoDB, the broker, and the logger agent <strong>in terminal attached mode</strong>: this means that you can read the logs and stop all three containers at once by pressing <code>Ctrl-C</code>.</p>
<p>Once you are sure that everything works as expected, you may start the containers in <strong>detached mode</strong> with the following command:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> compose up <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span></span></code></pre></div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>You can stop the containers at any time with the command <code>docker compose down</code>.</p>
</div>
</div>
<p>Now the broker and the database are also accessible as if they were processes running on your host machine.</p>


</section>
</section>

 ]]></description>
  <category>docker</category>
  <category>container</category>
  <category>setup</category>
  <guid>https://mads-net.github.io/guides/containerized.html</guid>
  <pubDate>Sun, 01 Jun 2025 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Python Agent</title>
  <dc:creator>Paolo Bosetti</dc:creator>
  <link>https://mads-net.github.io/guides/python_agent.html</link>
  <description><![CDATA[ 




<section id="contents" class="level1">
<h1>Contents</h1>
<p>The Python3 MADS agent is available on <a href="https://github.com/MADS-net/python_agent" class="uri">https://github.com/MADS-net/python_agent</a>.</p>
<section id="installing" class="level2">
<h2 class="anchored" data-anchor-id="installing">Installing</h2>
<p>You need to have <code>python3</code> and <code>python3-dev</code> installed. Then proceed as follows depending on your platform.</p>
<section id="unix" class="level3">
<h3 class="anchored" data-anchor-id="unix">UNIX</h3>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python3</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> venv .venv</span>
<span id="cb1-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> .venv/bin/activate</span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install numpy</span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># also install other necessary Python libs</span></span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmake</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-Bbuild</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-DCMAKE_INSTALL_PREFIX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mads</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmake</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--build</span> build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-j6</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> cmake <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--install</span> build</span></code></pre></div>
<p>The above is tested on MacOS and Ubuntu 22.04.</p>
</section>
<section id="windows" class="level3">
<h3 class="anchored" data-anchor-id="windows">Windows</h3>
<p>Run the following from project root:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb2-1">python <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>m venv <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">venv</span></span>
<span id="cb2-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">venv</span>\Scripts\activate</span>
<span id="cb2-3">pip install numpy</span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># also install other necessary Python libs</span></span></code></pre></div>
<p>Then:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb3-1">cmake <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Bbuild <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>DCMAKE_INSTALL_PREFIX<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$(</span>mads <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb3-2">cmake <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>build build <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>config Release</span>
<span id="cb3-3">sudo cmake <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>install build</span></code></pre></div>
<div class="callout callout-style-default callout-warning callout-titled" title="Enable sudo on Windows">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Enable sudo on Windows
</div>
</div>
<div class="callout-body-container callout-body">
<p>For <code>sudo</code> to work on Windows, you need to enable it on <em>Settings &gt; System &gt; For Developers</em> and set <em>Enable sudo</em> to On.</p>
</div>
</div>
</section>
</section>
<section id="executing" class="level2">
<h2 class="anchored" data-anchor-id="executing">Executing</h2>
<p>The new agent is installed as <code>mads-python</code>, so you can just type <code>mads python -h</code> (or <code>mads-python -h</code> on Windows) to know more:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> mads <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-h</span></span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> ver. 1.2.6</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Usage:</span></span>
<span id="cb4-5">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">OPTION...</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb4-6"></span>
<span id="cb4-7">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-p,</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--period</span> arg         Sampling period <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">default</span> 100 ms<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb4-8">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-m,</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--module</span> arg         Python module to load</span>
<span id="cb4-9">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-n,</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> arg           Agent name <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">default</span> to <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'python'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb4-10">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-i,</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--agent-id</span> arg       Agent ID to be added to JSON frames</span>
<span id="cb4-11">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-s,</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--settings</span> arg       Settings file path/URI</span>
<span id="cb4-12">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-S,</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--save-settings</span> arg  Save settings to ini file</span>
<span id="cb4-13">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-v,</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span>            Print version</span>
<span id="cb4-14">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-h,</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--help</span>               Print usage</span></code></pre></div>
<p>Typically, to launch an agent named <code>python_source</code>, which gets its settings from a <code>python_source</code> section in <code>mads.ini</code>, and uses the Python module named <code>source</code> defined in the <code>source.py</code> file and that runs every 100 ms, the command is:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mads</span> python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> python_source <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> source <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p100</span></span></code></pre></div>
<p>where:</p>
<ul>
<li><code>-n python_source</code> sets the agent name to <code>python_source</code>, and gets its settings from the same section in the <code>mads.ini</code> file</li>
<li><code>-m source</code> sets the Python module to <code>source.py</code>, which is searched for in the Python modules search paths, see below</li>
<li><code>-p100</code> sets the sampling period to 100 ms</li>
</ul>
</section>
<section id="python-modules-search-paths" class="level2">
<h2 class="anchored" data-anchor-id="python-modules-search-paths">Python modules search paths</h2>
<p>The Python modules are searched for in the following folders:</p>
<ul>
<li><code>./python</code></li>
<li><code>./scripts</code></li>
<li><code>../python</code></li>
<li><code>../scripts</code></li>
<li><code>../../python</code></li>
<li><code>../../scripts</code></li>
<li><code>INSTALL_PREFIX + /python</code></li>
<li><code>INSTALL_PREFIX + /scripts</code></li>
</ul>
<p>plus any path listed in the <code>mads.ini</code> file under the <code>search_path</code> key (an array or a single string).</p>
</section>
<section id="the-mads.ini-section" class="level2">
<h2 class="anchored" data-anchor-id="the-mads.ini-section">The <code>mads.ini</code> section</h2>
<p>The following fields are typically used:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[python_source]</span></span>
<span id="cb6-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">period </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span></span>
<span id="cb6-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">venv </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> "/path/to/.venv"</span></span>
<span id="cb6-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">python_module </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> "my_source"</span></span>
<span id="cb6-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">search_paths </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> ["/path/to/python/folder"</span></span></code></pre></div>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>The section name must match the <code>-m</code> option argument when you launch the agent, so in the case aboxe you must use <code>-m python_source</code>.</p>
</div>
</div>
</section>
<section id="module-types" class="level2">
<h2 class="anchored" data-anchor-id="module-types">Module Types</h2>
<p>Python modules can be of type <code>source</code>, <code>filter</code>, or <code>sink</code>. The module type is defined by setting a top level variable like this, typically at the beginning of the script, just after the various <code>import</code>s:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">agent_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sink"</span></span></code></pre></div>
<p>All the modules <strong>must</strong> implement a <code>setup()</code> function, which is expected to use the dictionary available in the module variable <code>params</code> (a dictionary)&nbsp;to do initial setup (opening ports or files, etc.)</p>
<p><strong>Source</strong> modules <strong>must</strong> implement a <code>get_output()</code> function, that produces the JSON string that will be published.</p>
<p><strong>Filter</strong> modules <strong>must</strong> implement a <code>process()</code> function, that is supposed to operate on the last received data dictionary (available as <code>data</code>, a module variable) and produce a JSON string that will be published.</p>
<p><strong>Sink</strong> modules <strong>must</strong> implement a <code>deal_with_data()</code> function, that operates on the <code>data</code> dictionary, a module variable.</p>
</section>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>To be completed</p>
</div>
</div>
<hr>


</section>

 ]]></description>
  <category>python</category>
  <category>agent</category>
  <guid>https://mads-net.github.io/guides/python_agent.html</guid>
  <pubDate>Sun, 01 Jun 2025 22:00:00 GMT</pubDate>
</item>
</channel>
</rss>
